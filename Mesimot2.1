{
  "name": "construction-manager",
  "version": "1.0.0",
  "dependencies": {
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "react-router-dom": "6.8.0",
    "lucide-react": "0.263.1",
    "recharts": "2.8.0",
    "tailwindcss": "3.3.0",
    "@tailwindcss/forms": "0.5.4"
  }
}

// index.html
<!DOCTYPE html>
<html lang="he" dir="rtl">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>ניהול פרויקטים בבנייה</title>
  </head>
  <body>
    <div id="root"></div>
  </body>
</html>

// index.js
import { StrictMode } from "react";
import { createRoot } from "react-dom/client";
import App from "./App";
import "./styles.css";

const rootElement = document.getElementById("root");
const root = createRoot(rootElement);

root.render(
  <StrictMode>
    <App />
  </StrictMode>
);

// styles.css
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  margin: 0;
  font-family: system-ui, -apple-system, sans-serif;
}

html {
  direction: rtl;
}

// App.js
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
import LoginScreen from "./screens/LoginScreen";
import ProjectSelection from "./screens/ProjectSelection";
import TaskTypeSelection from "./screens/TaskTypeSelection";
import TasksList from "./screens/TasksList";
import TaskForm from "./screens/TaskForm";

function App() {
  return (
    <Router>
      <Routes>
        <Route path="/" element={<LoginScreen />} />
        <Route path="/projects" element={<ProjectSelection />} />
        <Route path="/task-types" element={<TaskTypeSelection />} />
        <Route path="/tasks" element={<TasksList />} />
        <Route path="/task/new" element={<TaskForm />} />
        <Route path="/task/edit/:id" element={<TaskForm />} />
      </Routes>
    </Router>
  );
}

export default App;

// screens/LoginScreen.js
import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { Building, Mail, Lock } from "lucide-react";

export default function LoginScreen() {
  const navigate = useNavigate();
  const [isLogin, setIsLogin] = useState(true);

  const handleSubmit = (e) => {
    e.preventDefault();
    navigate('/projects');
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-50 to-white flex items-center justify-center p-4">
      <div className="max-w-md w-full">
        <div className="text-center mb-8">
          <div className="flex justify-center mb-4">
            <div className="w-16 h-16 bg-blue-500 rounded-xl flex items-center justify-center">
              <Building className="text-white" size={32} />
            </div>
          </div>
          <h1 className="text-2xl font-bold text-gray-900 mb-2">ברוכים הבאים</h1>
          <p className="text-gray-600">מערכת ניהול פרויקטים בבנייה</p>
        </div>

        <div className="bg-white rounded-2xl shadow-lg p-6">
          <form onSubmit={handleSubmit} className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                אימייל
              </label>
              <div className="relative">
                <Mail className="w-5 h-5 text-gray-400 absolute left-3 top-2.5" />
                <input
                  type="email"
                  className="w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-transparent pl-10"
                  placeholder="your@email.com"
                />
              </div>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                סיסמה
              </label>
              <div className="relative">
                <Lock className="w-5 h-5 text-gray-400 absolute left-3 top-2.5" />
                <input
                  type="password"
                  className="w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-transparent pl-10"
                  placeholder="הכנס סיסמה"
                />
              </div>
            </div>

            <button
              type="submit"
              className="w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 transition-colors font-medium mt-6"
            >
              התחבר
            </button>
          </form>
        </div>
      </div>
    </div>
  );
}

// screens/ProjectSelection.js
import React from "react";
import { useNavigate } from "react-router-dom";
import { Building } from "lucide-react";

export default function ProjectSelection() {
  const navigate = useNavigate();
  
  const projects = [
    {
      id: 1,
      name: 'מגדלי הים התיכון',
      location: 'רחוב הרצל 100, תל אביב',
      progress: 75
    },
    {
      id: 2,
      name: 'פארק המדע',
      location: 'רחוב ויצמן 50, רחובות',
      progress: 45
    },
    {
      id: 3,
      name: 'מתחם המגורים הירוק',
      location: 'שדרות בן גוריון 80, חיפה',
      progress: 90
    }
  ];

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <div className="max-w-6xl mx-auto">
        <div className="text-center mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">הפרויקטים שלי</h1>
          <p className="text-gray-600">בחר פרויקט</p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {projects.map(project => (
            <div
              key={project.id}
              onClick={() => navigate('/task-types')}
              className="bg-white rounded-xl shadow-sm hover:shadow-lg transition-all cursor-pointer overflow-hidden group"
            >
              <div className="p-6">
                <h3 className="text-xl font-bold text-gray-900 group-hover:text-blue-600 transition-colors mb-2">
                  {project.name}
                </h3>
                
                <div className="flex items-center gap-2 text-gray-600 mb-4">
                  <Building size={16} />
                  <span>{project.location}</span>
                </div>

                <div className="mt-4">
                  <div className="flex justify-between text-sm mb-1">
                    <span className="text-gray-500">התקדמות</span>
                    <span className="font-medium">{project.progress}%</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div
                      className="bg-blue-600 rounded-full h-2 transition-all"
                      style={{ width: `${project.progress}%` }}
                    />
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}

// screens/TaskTypeSelection.js
import React from "react";
import { useNavigate } from "react-router-dom";
import { Hammer, ClipboardList, Users } from "lucide-react";

export default function TaskTypeSelection() {
  const navigate = useNavigate();
  
  const taskTypes = [
    {
      id: 'execution',
      title: 'משימות ביצוע',
      description: 'משימות לביצוע בשטח',
      icon: Hammer,
      color: 'bg-blue-600',
      lightColor: 'bg-blue-50'
    },
    {
      id: 'management',
      title: 'משימות ניהול',
      description: 'משימות ניהוליות ותיאומים',
      icon: ClipboardList,
      color: 'bg-purple-600',
      lightColor: 'bg-purple-50'
    },
    {
      id: 'supervision',
      title: 'משימות פיקוח/קבלן',
      description: 'משימות מול גורמי חוץ',
      icon: Users,
      color: 'bg-green-600',
      lightColor: 'bg-green-50'
    }
  ];

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <div className="max-w-6xl mx-auto">
        <div className="text-center mb-12">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">רשימות משימות</h1>
          <p className="text-gray-600">בחר את סוג המשימות</p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          {taskTypes.map((type) => (
            <button
              key={type.id}
              onClick={() => navigate('/tasks', { state: { type: type.id } })}
              className={`group relative flex flex-col p-8 rounded-2xl shadow-sm ${type.lightColor} transition-all duration-300 hover:scale-105`}
            >
              <div className={`w-16 h-16 ${type.color} rounded-xl flex items-center justify-center mb-6`}>
                <type.icon className="text-white" size={32} />
              </div>

              <div className="text-right">
                <h3 className="text-xl font-bold mb-2">{type.title}</h3>
                <p className="text-gray-600">{type.description}</p>
              </div>
            </button>
          ))}
        </div>
      </div>
    </div>
  );
}

// screens/TasksList.js
import React, { useState } from "react";
import { useNavigate, useLocation } from "react-router-dom";
import { Plus, Search } from "lucide-react";

export default function TasksList() {
  const navigate = useNavigate();
  const location = useLocation();
  const [searchTerm, setSearchTerm] = useState("");
  
  const tasks = [
    {
      id: 1,
      title: "התקנת חשמל",
      location: "קומה 3, דירה 12",
      contractor: "א.ב חשמל בע״מ",
      status: "open"
    },
    {
      id: 2,
      title: "ריצוף מסדרון",
      location: "קומה 2",
      contractor: "ג.ד ריצוף",
      status: "inProgress"
    },
    {
      id: 3,
      title: "התקנת דלתות",
      location: "קומה 4",
      contractor: "ה.ו נגרות",
      status: "closed"
    }
  ];

  const getStatusStyle = (status) => {
    switch (status) {
      case 'open':
        return 'bg-red-100 text-red-800';
      case 'inProgress':
        return 'bg-yellow-100 text-yellow-800';
      case 'closed':
        return 'bg-green-100 text-green-800';
      default:
        return 'bg-gray-100 text-gray-800';
    }
  };

  const getStatusText = (status) => {
    switch (status) {
      case 'open':
        return 'פתוחה';
      case 'inProgress':
        return 'בביצוע';
      case 'closed':
        return 'סגורה';
      default:
        return '';
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <div className="max-w-7xl mx-auto">
        <div className="flex justify-between items-center mb-8">
          <div>
            <h1 className="text-2xl font-bold text-gray-900">רשימת משימות</h1>
            <p className="text-gray-600">מגדלי הים התיכון - תל אביב</p>
          </div>
          
          <button
            onClick={() => navigate('/task/new')}
            className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2"
          >
            <Plus size={20} />
            <span>משימה חדשה</span>
          </button>
        </div>

        <div className="bg-white rounded-xl shadow-sm mb-6">
          <div className="p-4">
            <div className="relative">
              <Search className="w-5 h-5 text-gray-400 absolute right-3 top-2.5" />
              <input
                type="text"
                placeholder="חיפוש משימות..."
                className="w-full pl-4 pr-10 py-2 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
              />
            </div>
          </div>

          <div className="border-t">
            {tasks
              .filter(task => 
                task.title.includes(searchTerm) || 
                task.location.includes(searchTerm) ||
                task.contractor.includes(searchTerm)
              )
              .map(task => (
                <div
                  key={task.id}
                  onClick={() => navigate(`/task/edit/${task.id}`)}
                  className="p-4 border-b last:border-b-0 hover:bg-gray-50 cursor-pointer"
                >
